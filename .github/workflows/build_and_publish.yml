name: Build and publish

on:
  push:
  pull_request:
env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Fix tag reference (workaround for https://github.com/actions/checkout/issues/290)
        run: git fetch --update-head-ok -f origin ${{ github.ref }}:${{ github.ref }}
      - name: Build
        run: docker compose up
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: executables-linux
          if-no-files-found: error
          path: |
            target/appimage/*.AppImage
  build-windows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Fix tag reference (workaround for https://github.com/actions/checkout/issues/290)
        run: git fetch --update-head-ok -f origin ${{ github.ref }}:${{ github.ref }}
      - name: Build (Windows)
        run: docker compose -f docker-compose.windows.yml up
      - name: Make Windows Installer
        run: ./create_windows_installer.sh
      - name: Zip Portable Windows Artifact
        run: zip -r windows-portable.zip package
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: executables-windows
          path: |
            *.zip
            *.exe

  publish:
    permissions:
      contents: write
    needs: [build, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: executables-*
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: false
          generate_release_notes: true
          files: |
            **/*.AppImage
            **/*.zip
            **/*.exe
      - run: ls -R .
